---
# install/upgrade OMERO.server

# TODO: Move to a separate role?
- name: omero server | install python3
  become: true
  yum:
    name: python36
    state: present
  when: omero_server_python3

- name: omero server | is server symlink present
  become: true
  stat:
    path: "{{ omero_server_basedir }}/{{ omero_server_symlink }}"
  register: omero_server_symlink_st

- name: omero server | is virtualenv present
  become: true
  stat:
    path: "{{ omero_server_virtualenv_basedir }}"
  register: omero_server_venv_st

# Is there an existing OMERO.server that uses the requested virtualenv?
- name: omero server | does omero server match requested virtualenv
  set_fact:
    _omero_server_matches_virtualenv: >-
      {{
        omero_server_symlink_st.stat.exists and
        (
          (not omero_server_virtualenv and not omero_server_python3)
          or
          omero_server_venv_st.stat.exists
        )
      }}

# This should be safe to always run including in check-mode
- name: omero server | get server version
  become: true
  become_user: "{{ omero_server_system_user }}"
  command: >-
    {{ omero_server_omero_command }}
    version
  register: omero_server_version
  when: _omero_server_matches_virtualenv
  changed_when: false
  check_mode: false
  # Set a custom error message
  ignore_errors: true

- name: omero server | check omero version could be obtained
  assert:
    msg: >-
      OMERO.server found but unable to get version,
      you may have a corrupt installation
    that: >-
      not _omero_server_matches_virtualenv or
      omero_server_version is not undefined

# TODO: If server was started by systemd but stopped directly you may end up
# with a hanging process

# Check whether an upgrade is available since `omego upgrade` always
# restarts the server
- name: omero server | get latest downloads url
  uri:
    url: https://downloads.openmicroscopy.org/latest/omero
    method: HEAD
  register: _omero_server_downloads_latest
  check_mode: false

# omego supports --release "latest" but not "present"
# It's easiest to lookup a concrete version and use this for all omego
# operations instead
- name: omero server | get latest version
  set_fact:
    _omero_server_new_version: "{{
      (omero_server_release in ('latest', 'present')) | ternary(
         _omero_server_downloads_latest.url.strip('/').split('/')[-1],
         omero_server_release
      )
  }}"

- name: omero server | checkupgrade
  set_fact:
    # If _omero_server_new_version does not begin with a number assume it's a
    # custom build, always upgrade
    # If we're switching from a non-venv to a venv treat it as an upgrade
    _omero_server_update_needed: >-
      {{
        not _omero_server_matches_virtualenv or
        not (_omero_server_new_version | regex_search('^[0-9]')) or
        (
          (omero_server_version.stdout | default('') | length > 0) and
          (omero_server_version.stdout is version_compare(
            _omero_server_new_version,
            omero_server_checkupgrade_comparator))
        )
      }}

- debug:
    msg: >-
      Upgrade needed: {{ omero_server_version.stdout | default('UNKNOWN') }} ->
      {{ omero_server_release }}
  when: _omero_server_update_needed

# If the OMERO.server symlink doesn't exist don't upgrade, this is a new
# installation
- name: omero server | set upgrade flag
  set_fact:
    _omero_server_execute_upgrade: "{{
      omero_server_upgrade and
      _omero_server_update_needed and
      (omero_server_release != 'present') and
      omero_server_symlink_st.stat.exists
    }}"

- name: omero server | setup virtualenv
  become: true
  pip:
    name: "{{ omero_server_python_addons }}"
    state: present
    virtualenv: "{{ omero_server_basedir }}/venv"
    virtualenv_site_packages: true
  when: omero_server_virtualenv and not omero_server_python3
  notify:
    - omero-server rewrite omero-server configuration
    - omero-server restart omero-server

# TODO: figure out dependencies
- name: omero server | setup virtualenv3
  become: true
  pip:
    name: "{{ omero_server_python_requirements + omero_server_python_addons }}"
    state: present
    virtualenv: "{{ omero_server_virtualenv_basedir }}"
    virtualenv_command: /usr/bin/python3 -mvenv
  when: omero_server_python3
  notify:
    - omero-server rewrite omero-server configuration
    - omero-server restart omero-server

# TODO: Remove when https://github.com/ome/omero-py/pull/110 is released
- name: omero server | patch omero/plugins/db.py
  become: true
  get_url:
    dest: "{{ omero_server_virtualenv_basedir }}\
      /lib64/python3.6/site-packages/omero/plugins/db.py"
    force: true
    url: "https://raw.githubusercontent.com/ome/omero-py/\
      8c3afd42bc2dc061160bb430f32150c69839c832/src/omero/plugins/db.py"
  when: omero_server_python3

- name: omero server | install omero
  become: true
  become_user: "{{ omero_server_system_user }}"
  command: >
    {{ omero_server_omego }}
    install
    {{ omero_server_omego_options }}
    {{ omero_server_omego_db_options }}
    --rootpass {{ omero_server_rootpassword | quote }}
  args:
    chdir: "{{ omero_server_basedir }}"
    creates: "{{ omero_server_basedir }}/{{ omero_server_symlink }}"
  environment: "{{ omero_server_omego_environment }}"
  notify:
    - omero-server rewrite omero-server configuration
    - omero-server restart omero-server

# Backup database

- name: omero server | create omero backup directory
  become: true
  file:
    mode: 0700
    owner: "{{ omero_server_system_user }}"
    path: "{{ omero_server_database_backupdir }}"
    state: directory
  when: >-
    (omero_server_database_backupdir | length > 0) and
    _omero_server_execute_upgrade

- name: omero server | backup database
  become: true
  become_user: "{{ omero_server_system_user }}"
  command: >
    {{ omero_server_omego }}
    db dump
    {{ omero_server_omego_db_options }}
    --serverdir {{ omero_server_basedir }}/{{ omero_server_symlink }}
  args:
    chdir: "{{ omero_server_database_backupdir }}"
  environment: "{{ omero_server_omego_environment }}"
  when: >-
    (omero_server_database_backupdir | length > 0) and
    _omero_server_execute_upgrade

# Upgrade
- name: omero server | upgrade
  become: true
  become_user: "{{ omero_server_system_user }}"
  command: >
    {{ omero_server_omego }}
    install --upgrade
    {{ omero_server_omego_options }}
    {{ omero_server_omego_db_options }}
  args:
    chdir: "{{ omero_server_basedir }}"
  environment: "{{ omero_server_omego_environment }}"
  when: _omero_server_execute_upgrade
  notify:
    - omero-server rewrite omero-server configuration
    - omero-server restart omero-server

- name: omero server | delete OMERO.server/lib/python
  become: true
  file:
    path: "{{ omero_server_omerodir }}/lib/python"
    state: absent
  when: omero_server_python3

- name: omero server | patch bin/omero to use virtualenv
  become: true
  replace:
    mode: 0755
    path: "{{ omero_server_basedir }}/{{ omero_server_symlink }}/bin/omero"
    regexp: "^#!.+python$"
    replace: "#!{{ omero_server_basedir }}/venv/bin/python"
  when: omero_server_virtualenv and not omero_server_python3
  notify:
    - omero-server rewrite omero-server configuration
    - omero-server restart omero-server

# Remembering to set OMERODIR everywhere is prone to error
- name: omero server | create omero server wrapper
  become: true
  copy:
    content: |
      #!/bin/sh
      . {{ omero_server_virtualenv_basedir }}/bin/activate
      export OMERODIR="{{ omero_server_omerodir }}"
      exec {{ omero_server_virtualenv_basedir }}/bin/omero "$@"
    dest: "{{ omero_server_omero_command }}"
    mode: "0755"
  when: omero_server_python3
  notify:
    - omero-server rewrite omero-server configuration
    - omero-server restart omero-server
